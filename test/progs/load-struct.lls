; ModuleID = 'load-struct.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.ident\09\22GCC: (GNU) 4.5.3 LLVM: exported\22"

%char = type i8
%int = type i32
%"long unsigned int" = type i64
%"struct test" = type { i32, i64 }
%"unsigned int" = type i32

define i32 @main(i32 %argc, i8** %argv) nounwind {
entry:
  %memtmp = alloca %"struct test"
  %"alloca point" = bitcast i32 0 to i32
  %"ssa point" = bitcast i32 0 to i32
  br label %"2"

"2":                                              ; preds = %entry
  store { i32, i64 } { i32 3, i64 4 }, "struct test"* %memtmp, align 16
  %0 = getelementptr inbounds %"struct test"* %memtmp, i32 0, i32 0
  %1 = load i32* %0, align 4
  br label %return

return:                                           ; preds = %"2"
  ret i32 %1
}
